[{"path":"https://mattblackwell.github.io/prepost/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 prepost authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mattblackwell.github.io/prepost/articles/prepost-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Overview","text":"Researchers often interested conditional average treatment effects (CATEs): , average treatment effect conditional value moderator variable. context survey design, researchers face trade-regarding whether measure relevant moderator variable treatment. Measuring moderator treatment can create priming bias, respondents react differently treatment , example, measurement moderator primed certain identity. Measuring moderator treatment can lead post-treatment bias, value moderator variable affected treatment. convenience, use following terms distinguish different survey designs: pre-test design: moderator measured treatment post-test design: moderator measured treatment random placement design: whether moderator measured treatment randomized prepost package provides functions help researchers examine robustness results post-test random placement designs, including nonparametric bounds interaction treatment moderator, sensitivity analyses, Bayesian parametric model incorporate covariates.","code":""},{"path":"https://mattblackwell.github.io/prepost/articles/prepost-vignette.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Overview","text":"illustrate, use data survey experiment Del Ponte (2020) uses post-test design. experiment, author investigates Italian citizens respond hypothetical newspaper vignette describing speech German Chancellor Angela Merkel. content speech randomized 2 (praising blaming Italy) x 2 (symbolic economic theme) design. simplicity, focus first contrast. primary outcome respondent’s self-reported anger response article. One important moderator study strength respondent’s Italian national identity, measured treatment. simplify, binarize outcome moderator variables splitting sample medians. author finds speech praising rather blaming Italy reduces anger among respondents strong national identity. replicate result, can use OLS regression robust standard errors, model contains interaction treatment, t, moderator, d: However, model account possibility post-treatment bias. respondents’ strength Italian national identity affected reading speech praising versus blaming Italy? can course look average treatment effect moderator variable : However, null result test rule possibility post-treatment bias, since individual-level effects may “cancel ” aggregate. Indeed, exclude respondents low levels political sophistication (defined either bottom quartile political knowledge scale regular readers newspaper blog experiment advertised), observe statistically significant treatment effect moderator. Reading speech Merkel praises Italy (versus blames Italy) causes respondents report higher levels Italian national identity.","code":"library(dplyr) library(ggplot2) library(lmtest) library(sandwich) library(prepost)  set.seed(02134) theme_set(theme_classic())   data(delponte)  delponte |> select(t_commonality, itaid_bin, angry_bin) |> sample_n(5) #>   t_commonality itaid_bin angry_bin #> 1             1         1         0 #> 2             0         1         0 #> 3             1         1         0 #> 4             1         1         0 #> 5             0         1         1 lm(angry_bin ~ t_commonality * itaid_bin, data = delponte) |>    coeftest(vcov = vcovHC) #>  #> t test of coefficients: #>  #>                          Estimate Std. Error t value  Pr(>|t|)     #> (Intercept)              0.258427   0.046931  5.5066 5.632e-08 *** #> t_commonality           -0.077871   0.065694 -1.1854 0.2363882     #> itaid_bin                0.153338   0.059260  2.5875 0.0099224 **  #> t_commonality:itaid_bin -0.270168   0.076944 -3.5112 0.0004828 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 lm(itaid_bin ~ t_commonality, data = delponte) |>    coeftest(vcov = vcovHC) #>  #> t test of coefficients: #>  #>               Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   0.677536   0.028238 23.9941   <2e-16 *** #> t_commonality 0.061594   0.038744  1.5898   0.1125     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 delponte_subset <- delponte |>   filter(sopscale >= quantile(sopscale, 0.25, na.rm = TRUE),          Corriere == 1)  lm(itaid_bin ~ t_commonality, data = delponte_subset) |>   coeftest(vcov = vcovHC) #>  #> t test of coefficients: #>  #>               Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   0.685345   0.030620 22.3823  < 2e-16 *** #> t_commonality 0.086207   0.041278  2.0884  0.03731 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://mattblackwell.github.io/prepost/articles/prepost-vignette.html","id":"nonparametric-bounds","dir":"Articles","previous_headings":"","what":"Nonparametric bounds","title":"Overview","text":"implement sharp bounds derived [CITE PAPER], can use post_bounds() function, returns list containing values bounds interaction treatment moderator, well external confidence intervals. default, bounds calculated assuming randomization treatment. However, making additional assumptions can tighten bounds considerably. function allows user toggle either following assumptions: moderator_mono: Monotonicity post-test effect, .e., measuring moderator treatment moves moderator one direction. Defaults NULL. stable_mod: Stable moderator control, .e., moderator control condition affected timing treatment. Defaults FALSE. can also incorporate covariates using formula syntax. (Note: order incorporate covariates, argument stable_mod must set TRUE.)","code":"bounds_1 <- post_bounds(formula = angry_bin ~ t_commonality,                         data = delponte_subset,                         moderator = ~ itaid_bin) #> Bootstrap running... #> 0% |==                  | 100% #> 0% |====                | 100% #> 0% |======              | 100% #> 0% |========            | 100% #> 0% |==========          | 100% #> 0% |============        | 100% #> 0% |==============      | 100% #> 0% |================    | 100% #> 0% |==================  | 100% #> 0% |====================| 100%  print(bounds_1) #> $lower #> [1] -1.391705 #>  #> $upper #> [1] 1.391705 #>  #> $ci_lower #> [1] -1.449048 #>  #> $ci_upper #> [1] 1.449048 #>  #> $post_est #> [1] -0.262191 bounds_2 <- post_bounds(   formula = angry_bin ~ t_commonality,   data = delponte_subset,   moderator = ~ itaid_bin,   moderator_mono = 1,   stable_mod = TRUE ) #> Bootstrap running... #> 0% |==                  | 100% #> 0% |====                | 100% #> 0% |======              | 100% #> 0% |========            | 100% #> 0% |==========          | 100% #> 0% |============        | 100% #> 0% |==============      | 100% #> 0% |================    | 100% #> 0% |==================  | 100% #> 0% |====================| 100%  print(bounds_2) #> $lower #> [1] -0.3802878 #>  #> $upper #> [1] -0.2203843 #>  #> $ci_lower #> [1] -0.5212285 #>  #> $ci_upper #> [1] -0.09330538 #>  #> $post_est #> [1] -0.262191"},{"path":"https://mattblackwell.github.io/prepost/articles/prepost-vignette.html","id":"bayesian-parametric-model","dir":"Articles","previous_headings":"","what":"Bayesian parametric model","title":"Overview","text":"Incorporating covariates nonparametric bounds possible, Bayesian parametric model gives flexibility. can compare estimate credible interval quantity interest (interaction treatment moderator) without covariates. provide two different estimates quantity: delta.1 -sample estimate delta.2 population estimate.","code":"gibbs_1 <- prepost_gibbs_nocovar(   formula = angry_bin ~ t_commonality,   data = delponte_subset,   prepost = ~1,   moderator = ~ itaid_bin,   iter = 250 ) gibbs_2 <- prepost_gibbs(   formula = angry_bin ~ t_commonality,   data = delponte_subset,   prepost = ~1,   moderator = ~ itaid_bin,   covariates = ~ north + satisf,   iter = 250 ) delta_list <- list(gibbs_1$delta.1,                    gibbs_1$delta.2,                    gibbs_2$delta.1,                    gibbs_2$delta.2)  get_ci <- function(x){   tribble(~mean, ~lowerCI, ~upperCI,           mean(x), quantile(x, 0.025), quantile(x, 0.975)) }  lapply(delta_list, get_ci) |>   bind_rows() |>   mutate(model = c(     \"In-sample delta, w/o covars\",     \"Population delta, w/o covars\",     \"In-sample delta, with covars\",     \"Population delta, with covars\"   )) |>   as_tibble() |>   ggplot(aes(     x = mean,     y = model,     xmin = lowerCI,     xmax = upperCI   )) +   geom_point() +   geom_errorbar(width = 0.2) +   geom_vline(xintercept = 0, lty = \"dotted\") +   labs(x = \"\",         y = \"\",         title = \"Bayesian credible intervals\")"},{"path":"https://mattblackwell.github.io/prepost/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Blackwell. Author, maintainer. Jacob Brown. Author. Sophie Hill. Author.","code":""},{"path":"https://mattblackwell.github.io/prepost/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Blackwell M, Brown J, Hill S (2024). prepost: Non-Parametric Bounds Gibbs Sampler Assessing Priming Post-Treatment Bias. R package version 0.1.0, https://mattblackwell.github.io/prepost/, https://github.com/mattblackwell/prepost.","code":"@Manual{,   title = {prepost: Non-Parametric Bounds and Gibbs Sampler for Assessing Priming and Post-Treatment Bias},   author = {Matthew Blackwell and Jacob Brown and Sophie Hill},   year = {2024},   note = {R package version 0.1.0,     https://mattblackwell.github.io/prepost/},   url = {https://github.com/mattblackwell/prepost}, }"},{"path":"https://mattblackwell.github.io/prepost/index.html","id":"prepost","dir":"","previous_headings":"","what":"Non-Parametric Bounds and Gibbs Sampler for Assessing Priming and Post-Treatment Bias","title":"Non-Parametric Bounds and Gibbs Sampler for Assessing Priming and Post-Treatment Bias","text":"package contains code sample data implement non-parametric bounds Bayesian methods assessing post-treatment bias developed Priming bias versus post-treatment bias experimental designs, Blackwell et al. (Forthcoming). Functions prefixed post_ used analyze data post-test design: .e., one moderator measured post-treatment. Functions prefixed prepost_ used analyze data random placement design, moderator randomly assigned measured treatment.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/delponte.html","id":null,"dir":"Reference","previous_headings":"","what":"Replication dataset from Del Ponte (2020) — delponte","title":"Replication dataset from Del Ponte (2020) — delponte","text":"Ponte, Alessandro Del. \"influence foreign elite rhetoric: National identity, emotions, attitudes toward austerity.\" European Union Politics 22.1 (2021): 155-178.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/delponte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replication dataset from Del Ponte (2020) — delponte","text":"","code":"delponte"},{"path":"https://mattblackwell.github.io/prepost/reference/delponte.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Replication dataset from Del Ponte (2020) — delponte","text":"data frame 707 rows 53 variables: angry_bin Self-reported anger reading article itaid_bin Binary measure strength Italian identity t_commonality t=Treatment indicator article praises (1) blames (0) Italy north Indicator respondent living Northern Italy satisf Answer 4-point scale (rescaled 0-1) question \"general, satisfied dissatisfied economic situation?\" sopscale Measure politically sophisticated respondent correct answers 2 factual question. Rescaled 0-1. Corriere Indicator respondent regular reader Corriere blog survey advertised.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/delponte.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Replication dataset from Del Ponte (2020) — delponte","text":"https://journals.sagepub.com/doi/suppl/10.1177/1465116520966653","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/delponte.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replication dataset from Del Ponte (2020) — delponte","text":"dataset containing results online survey experiment conducted Italian respondents read article ","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/post_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Run post-treatment bounds. — post_bounds","title":"Run post-treatment bounds. — post_bounds","text":"Run post-treatment bounds.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/post_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run post-treatment bounds. — post_bounds","text":"","code":"post_bounds(   formula,   data,   moderator,   sims = 1000,   conf_level = 0.95,   moderator_mono = NULL,   stable_mod = FALSE,   nondiff = FALSE,   progress = TRUE )"},{"path":"https://mattblackwell.github.io/prepost/reference/post_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run post-treatment bounds. — post_bounds","text":"formula formula syntax y ~ t, y (unquoted) name outcome t (unquoted) name treatment. data data.frame containing variables formula, moderator, covariates arguments. moderator one-sided formuala syntax ~ d, d (unquoted) name  moderator variable CATE. sims integer indicating number simulations bootstrap confidence intervals bounds. conf_level numeric indicating confidence level bootstrap confidence intervals. moderator_mono integer vector length 2 indicating bounds assume monotonicity effect post-test moderator 1 indicating post-test effect positive -1 indicating negative. vector length 2 allows monotonicity assumption vary treatment status first entry control second treated. stable_mod logical value indicating bounds assume moderator unaffected pre-vs-post measurement control condition. nondiff logical value indicating bounds assume treatment effect moderator independent potential outcomes. progress logical indicating progress bars displayed. Defaults TRUE.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/post_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run post-treatment bounds. — post_bounds","text":"list object containing bounds.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/post_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run post-treatment bounds. — post_bounds","text":"","code":"data(delponte) post_bounds(   formula = angry_bin ~ t_commonality,    data = delponte,   moderator = ~ itaid_bin ) #> Bootstrap running... #> 0% |==                  | 100% #> 0% |====                | 100% #> 0% |======              | 100% #> 0% |========            | 100% #> 0% |==========          | 100% #> 0% |============        | 100% #> 0% |==============      | 100% #> 0% |================    | 100% #> 0% |==================  | 100% #> 0% |====================| 100% #> $lower #> [1] -1.4 #>  #> $upper #> [1] 1.4 #>  #> $ci_lower #> [1] -1.45455 #>  #> $ci_upper #> [1] 1.45455 #>  #> $post_est #> [1] -0.2701678 #>"},{"path":"https://mattblackwell.github.io/prepost/reference/post_sens.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sensitivity analysis on post-measurement design — post_sens","title":"Run sensitivity analysis on post-measurement design — post_sens","text":"Run sensitivity analysis post-measurement design","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/post_sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sensitivity analysis on post-measurement design — post_sens","text":"","code":"post_sens(   formula,   data,   moderator,   g_by,   g_max = 1,   q_by,   sims = 1000,   conf_level = 0.95,   moderator_mono = NULL,   stable_mod = FALSE,   progress = TRUE )"},{"path":"https://mattblackwell.github.io/prepost/reference/post_sens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sensitivity analysis on post-measurement design — post_sens","text":"formula formula syntax y ~ t, y (unquoted) name outcome t (unquoted) name treatment. data data.frame containing variables formula, moderator, covariates arguments. moderator one-sided formuala syntax ~ d, d (unquoted) name  moderator variable CATE. g_by Numeric indicating grid spacing \\(\\gamma\\) parameter places upper bound proportion units whose moderator affected treatment. g_max Numeric indicating maximum value \\(\\gamma\\) parameter. q_by Numeric indicating grid spacing mean moderator pre-test measurement. sims integer indicating number simulations bootstrap confidence intervals bounds. conf_level numeric indicating confidence level bootstrap confidence intervals. moderator_mono integer vector length 2 indicating bounds assume monotonicity effect post-test moderator 1 indicating post-test effect positive -1 indicating negative. vector length 2 allows monotonicity assumption vary treatment status first entry control second treated. stable_mod logical value indicating bounds assume moderator unaffected pre-vs-post measurement control condition. progress logical indicating progress bars displayed. Defaults TRUE.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/post_sens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sensitivity analysis on post-measurement design — post_sens","text":"list object containing sensitivity output.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/post_sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sensitivity analysis on post-measurement design — post_sens","text":"","code":"post_sens(formula = angry_bin ~ t_commonality,   data = delponte,   moderator = ~ itaid_bin,   g_by = 0.1 ) #> 0% |==                  | 100% #> 0% |====                | 100% #> 0% |======              | 100% #> 0% |========            | 100% #> 0% |==========          | 100% #> 0% |============        | 100% #> 0% |==============      | 100% #> 0% |================    | 100% #> 0% |==================  | 100% #> 0% |====================| 100% #>        gamma     lower     upper  ci_lower  ci_upper #> 1  0.0615942 -1.015053 0.1817998 -1.071183 0.8056042 #> 2  0.1615942 -1.015053 0.7984021 -1.102876 1.1498132 #> 3  0.2615942 -1.278600 0.8184618 -1.578838 1.0033118 #> 4  0.3615942 -1.399967 0.9215294 -1.723996 0.9981251 #> 5  0.4615942 -1.112325 1.0542587 -1.211475 1.1380851 #> 6  0.5615942 -1.147707 1.1477073 -1.195345 1.1957869 #> 7  0.6615942 -1.147707 1.1477073 -1.194633 1.1946334 #> 8  0.7615942 -1.147707 1.1477073 -1.194633 1.1946334 #> 9  0.8615942 -1.147707 1.1477073 -1.194633 1.1946334 #> 10 0.9615942 -1.147707 1.1477073 -1.194633 1.1946334"},{"path":"https://mattblackwell.github.io/prepost/reference/pre_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Run pre-treatment bounds. — pre_bounds","title":"Run pre-treatment bounds. — pre_bounds","text":"Run pre-treatment bounds.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/pre_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run pre-treatment bounds. — pre_bounds","text":"","code":"pre_bounds(formula, data, moderator, conf_level = 0.95, outcome_mono = 1L)"},{"path":"https://mattblackwell.github.io/prepost/reference/pre_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run pre-treatment bounds. — pre_bounds","text":"formula formula syntax y ~ t, y (unquoted) name outcome t (unquoted) name treatment. data data.frame containing variables formula, moderator, covariates arguments. moderator one-sided formuala syntax ~ d, d (unquoted) name  moderator variable CATE. conf_level numeric indicating confidence level bootstrap confidence intervals. outcome_mono integer indicating direction priming monotonicity assumption. default value 1 indicates asking moderator question pre-test moves outcomes positive direction units. value -1 indicates moves outcomes negative direction units.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/pre_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run pre-treatment bounds. — pre_bounds","text":"list object containing bounds.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/pre_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run pre-treatment bounds. — pre_bounds","text":"","code":"data(delponte) pre_bounds(   formula = angry_bin ~ t_commonality,    data = delponte,   moderator = ~ itaid_bin ) #> $lower #>             #> -0.5923203  #>  #> $upper #>            #> 0.3221525  #>  #> $ci_lower #> [1] -0.6875343 #>  #> $ci_upper #> [1] 0.4035053 #>  #> $pre_est #> [1] -0.2701678 #>"},{"path":"https://mattblackwell.github.io/prepost/reference/pre_sens.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sensitivity analysis on pre-test design — pre_sens","title":"Run sensitivity analysis on pre-test design — pre_sens","text":"Run sensitivity analysis pre-test design","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/pre_sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sensitivity analysis on pre-test design — pre_sens","text":"","code":"pre_sens(   formula,   data,   moderator,   t_by = 0.05,   conf_level = 0.95,   outcome_mono = 1L )"},{"path":"https://mattblackwell.github.io/prepost/reference/pre_sens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sensitivity analysis on pre-test design — pre_sens","text":"formula formula syntax y ~ t, y (unquoted) name outcome t (unquoted) name treatment. data data.frame containing variables formula, moderator, covariates arguments. moderator one-sided formuala syntax ~ d, d (unquoted) name  moderator variable CATE. t_by Numeric indicating grid spacing \\(\\theta\\) parameter restricts proportion units outcomes affected pre vs post-measurement moderator. conf_level numeric indicating confidence level bootstrap confidence intervals. outcome_mono integer indicating direction priming monotonicity assumption. default value 1 indicates asking moderator question pre-test moves outcomes positive direction units. value -1 indicates moves outcomes negative direction units.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/pre_sens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sensitivity analysis on pre-test design — pre_sens","text":"list object containing sensitivity output.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/pre_sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sensitivity analysis on pre-test design — pre_sens","text":"","code":"pre_sens(formula = angry_bin ~ t_commonality,   data = delponte,   moderator = ~ itaid_bin,   t_by = 0.1 ) #> $thetas #> [1] 0.0 0.1 0.2 0.3 0.4 #>  #> $lower #> [1] -0.2701678 -0.4701678 -0.6701678 -0.8701678 -1.0701678 #>  #> $upper #> [1] -0.2701678 -0.0701678  0.1298322  0.3298322  0.5298322 #>  #> $ci_lower #> [1] -0.4193849 -0.5954036 -0.7954036 -0.9954036 -1.1954036 #>  #> $ci_upper #> [1] -0.12095067  0.05506801  0.25506801  0.45506801  0.65506801 #>"},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Prepost bounds — prepost_bounds","title":"Run Prepost bounds — prepost_bounds","text":"Run Prepost bounds","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Prepost bounds — prepost_bounds","text":"","code":"prepost_bounds(   formula,   data,   moderator,   prepost,   sims = 1000,   conf_level = 0.95,   moderator_mono = NULL,   outcome_mono = NULL,   stable_mod = FALSE,   tau = 0.25,   progress = TRUE )"},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Prepost bounds — prepost_bounds","text":"formula formula syntax y ~ t, y (unquoted) name outcome t (unquoted) name treatment. data data.frame containing variables formula, moderator, covariates arguments. moderator one-sided formuala syntax ~ d, d (unquoted) name  moderator variable CATE. prepost one-sided formula syntax ~ z, z indicator variable whether moderator measured pre- post-treatment. sims integer specifying number simulations sensitivity analysis. conf_level numeric specifying level confidence intervals. moderator_mono integer vector length 2 indicating bounds assume monotonicity effect post-test moderator 1 indicating post-test effect positive -1 indicating negative. vector length 2 allows monotonicity assumption vary treatment status first entry control second treated. outcome_mono integer vector length 2 indicating bounds assume monotonicity effect post-test outcome 1 indicating post-test effect positive -1 indicating negative. vector length 2 allows monotonicity assumption vary treatment status first entry control second treated. stable_mod logical value indicating bounds assume moderator unaffected pre-vs-post measurement control condition. tau numeric indicating close moment conditions estimated bounds minimum values sample. allows us obtain bounds confidence intevals even assumptions slightly violated due sampling. progress logical indicating progress bars displayed. Defaults TRUE.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Prepost bounds — prepost_bounds","text":"list object containing bounds.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Prepost bounds — prepost_bounds","text":"","code":"x <- \"alfa,bravo,charlie,delta\""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Gibbs sampler for the random moderator placement design — prepost_gibbs","title":"Run Gibbs sampler for the random moderator placement design — prepost_gibbs","text":"Run Gibbs sampler random moderator placement design","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Gibbs sampler for the random moderator placement design — prepost_gibbs","text":"","code":"prepost_gibbs(   formula,   data,   prepost,   moderator,   covariates,   iter = 1000,   thin = 1,   burn = 0,   offset = 0,   monotonicity = TRUE,   stable = TRUE,   saturated = TRUE,   priors )"},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Gibbs sampler for the random moderator placement design — prepost_gibbs","text":"formula formula syntax y ~ t, y (unquoted) name outcome t (unquoted) name treatment. data data.frame containing variables formula, moderator, covariates arguments. prepost one-sided formula syntax ~ z, z indicator variable whether moderator measured  pre- post-treatment. moderator one-sided formuala syntax ~ d, d (unquoted) name  moderator variable CATE. covariates one-sided formula syntax ~ x1 + x2, right-hand side variables signify covariates Gibbs use try narrow bounds. iter Integer indicating number iterations Gibbs sampler. thin Integer indicating often Gibbs sampler save draw. burn Integer indicating many iterations performed saving draws Gibbs sampler. offset numeric value indicating center prior distribution covariate coefficients. monotonicity logical signifying whether model assumes monotonicity. stable logical signifying whether model assumes pre vs post indicator affect moderator control condition treatment. saturated logical indicating whether coefficients covariates allowed vary principal strata. priors list object containing priors Gibbs sampler. Priors include beta.precision, psi.precision, alpha, y.alpha, y.beta.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Gibbs sampler for the random moderator placement design — prepost_gibbs","text":"list object containing Gibbs posterior quantities interest parameters.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Gibbs sampler for the random moderator placement design — prepost_gibbs","text":"","code":"x <- \"alfa,bravo,charlie,delta\""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs_nocovar.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Gibbs sampler without covariates — prepost_gibbs_nocovar","title":"Run Gibbs sampler without covariates — prepost_gibbs_nocovar","text":"Run Gibbs sampler without covariates","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs_nocovar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Gibbs sampler without covariates — prepost_gibbs_nocovar","text":"","code":"prepost_gibbs_nocovar(   formula,   data,   prepost,   moderator,   iter = 1000,   thin = 1,   burn = 0,   monotonicity = TRUE,   stable = TRUE,   priors,   predictive = FALSE )"},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs_nocovar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Gibbs sampler without covariates — prepost_gibbs_nocovar","text":"formula formula syntax y ~ t, y name  outcome variable t name treatment. data data frame containin variables formula. prepost one-sided formula syntax ~ z, z indicator variable whether moderator measured pre- post-treatment. moderator formuala syntax ~ d, d moderator variable CATE. iter Numeric, number iterations Gibbs thin Numeric, thinning parameter Gibbs burn Numeric, burn rate Gibbs monotonicity logical signifying whether Gibbs assumes monotonicity. stable logical signifying whether Gibbs assumes stability. priors list object containing priors Gibbs sampler. Priors include beta.precision, psi.precision, alpha, y.alpha, y.beta. predictive logical indicator whether return prior predictive draws (TRUE) posterior draws (FALSE, default).","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs_nocovar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Gibbs sampler without covariates — prepost_gibbs_nocovar","text":"list object containing Gibbs posterior quantities interest parameters.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_gibbs_nocovar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Gibbs sampler without covariates — prepost_gibbs_nocovar","text":"","code":"x <- \"alfa,bravo,charlie,delta\""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_sens.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sensitivity analysis for the randomized moderator placement design — prepost_sens","title":"Run sensitivity analysis for the randomized moderator placement design — prepost_sens","text":"Run sensitivity analysis randomized moderator placement design","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sensitivity analysis for the randomized moderator placement design — prepost_sens","text":"","code":"prepost_sens(   formula,   data,   moderator,   prepost,   g_by,   g_at,   t_by,   t_at,   sims = 1000,   stable_mod = FALSE,   conf_level = 0.95,   moderator_mono = NULL,   outcome_mono = NULL,   tau = 0.25,   progress = TRUE )"},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_sens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sensitivity analysis for the randomized moderator placement design — prepost_sens","text":"formula formula syntax y ~ t, y (unquoted) name outcome t (unquoted) name treatment. data data.frame containing variables formula, moderator, covariates arguments. moderator one-sided formuala syntax ~ d, d (unquoted) name  moderator variable CATE. prepost one-sided formula syntax ~ z, z indicator variable whether moderator measured pre- post-treatment. g_by Numeric indicating grid spacing \\(\\gamma\\) parameter places upper bound proportion units whose moderator affected treatment. g_at Vector specifying values set \\(\\gamma\\) parameter sensitivity analysis. Overrides g_by. t_by Numeric indicating grid spacing \\(\\theta\\) parameter restricts proportion units outcomes affected pre vs post-measurement moderator. t_at Vector specifying values set \\(\\theta\\) parameter sensitivity analysis. Overrides t_by. sims integer indicating number simulations bootstrap confidence intervals bounds. stable_mod logical value indicating bounds assume moderator unaffected pre-vs-post measurement control condition. conf_level numeric indicating confidence level bootstrap confidence intervals. moderator_mono integer vector length 2 indicating bounds assume monotonicity effect post-test moderator 1 indicating post-test effect positive -1 indicating negative. vector length 2 allows monotonicity assumption vary treatment status first entry control second treated. outcome_mono integer vector length 2 indicating bounds assume monotonicity effect post-test outcome 1 indicating post-test effect positive -1 indicating negative. vector length 2 allows monotonicity assumption vary treatment status first entry control second treated. tau numeric indicating close moment conditions estimated bounds minimum values sample. allows us obtain bounds confidence intevals even assumptions slightly violated due sampling. progress logical indicating progress bars displayed. Defaults TRUE.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_sens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sensitivity analysis for the randomized moderator placement design — prepost_sens","text":"list object containing sensitivity output.","code":""},{"path":"https://mattblackwell.github.io/prepost/reference/prepost_sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sensitivity analysis for the randomized moderator placement design — prepost_sens","text":"","code":"x <- \"alfa,bravo,charlie,delta\""}]
